// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestsPS7
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Insert double into cell
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinListItem uIRecycleBinListItem = this.UIItemWindow.UIFolderViewWindow.UIRecycleBinListItem;
            WinListItem uIMozillaFirefoxListItem = this.UIItemWindow.UIFolderViewWindow.UIMozillaFirefoxListItem;
            WinEdit uICellContentsValueEdit = this.UISpreadsheetWindow.UICellContentsValueWindow.UICellContentsValueEdit;
            #endregion

            // Launch '%windir%\SysWOW64\WerFault.exe' with arguments '-u -p 1560 -s 592'
            ApplicationUnderTest werFaultApplication = ApplicationUnderTest.Launch(this.RecordedMethod1Params.ExePath, this.RecordedMethod1Params.AlternateExePath, "-u -p 1560 -s 592");

            // Launch '%USERPROFILE%\Source\Repos\cs3500\Spreadsheet\SpreadsheetGUI\bin\Debug\SpreadsheetGUI.exe'
            ApplicationUnderTest uISpreadsheetWindow = ApplicationUnderTest.Launch(this.RecordedMethod1Params.UISpreadsheetWindowExePath, this.RecordedMethod1Params.UISpreadsheetWindowAlternateExePath);

            // Click 'Recycle Bin' list item
            Mouse.Click(uIRecycleBinListItem, new Point(110, 115));

            // Click 'Recycle Bin' list item
            Mouse.Click(uIRecycleBinListItem, new Point(110, 115));

            // Click 'Mozilla Firefox' list item
            Mouse.Click(uIMozillaFirefoxListItem, new Point(143, 45));

            // Type '5' in 'cellContentsValue' text box
            uICellContentsValueEdit.Text = this.RecordedMethod1Params.UICellContentsValueEditText;

            // Type '{Enter}' in 'cellContentsValue' text box
            Keyboard.SendKeys(uICellContentsValueEdit, this.RecordedMethod1Params.UICellContentsValueEditSendKeys, ModifierKeys.None);
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UISpreadsheetWindow UISpreadsheetWindow
        {
            get
            {
                if ((this.mUISpreadsheetWindow == null))
                {
                    this.mUISpreadsheetWindow = new UISpreadsheetWindow();
                }
                return this.mUISpreadsheetWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UISpreadsheetWindow mUISpreadsheetWindow;
        
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Launch '%windir%\SysWOW64\WerFault.exe' with arguments '-u -p 1560 -s 592'
        /// </summary>
        public string ExePath = "C:\\Windows\\SysWOW64\\WerFault.exe";
        
        /// <summary>
        /// Launch '%windir%\SysWOW64\WerFault.exe' with arguments '-u -p 1560 -s 592'
        /// </summary>
        public string AlternateExePath = "%windir%\\SysWOW64\\WerFault.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Source\Repos\cs3500\Spreadsheet\SpreadsheetGUI\bin\Debug\SpreadsheetGUI.exe'
        /// </summary>
        public string UISpreadsheetWindowExePath = "C:\\Users\\Brandon Tobin\\Source\\Repos\\cs3500\\Spreadsheet\\SpreadsheetGUI\\bin\\Debug\\S" +
            "preadsheetGUI.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Source\Repos\cs3500\Spreadsheet\SpreadsheetGUI\bin\Debug\SpreadsheetGUI.exe'
        /// </summary>
        public string UISpreadsheetWindowAlternateExePath = "%USERPROFILE%\\Source\\Repos\\cs3500\\Spreadsheet\\SpreadsheetGUI\\bin\\Debug\\Spreadshee" +
            "tGUI.exe";
        
        /// <summary>
        /// Type '5' in 'cellContentsValue' text box
        /// </summary>
        public string UICellContentsValueEditText = "5";
        
        /// <summary>
        /// Type '{Enter}' in 'cellContentsValue' text box
        /// </summary>
        public string UICellContentsValueEditSendKeys = "{Enter}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISpreadsheetWindow : WinWindow
    {
        
        public UISpreadsheetWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Spreadsheet";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Spreadsheet");
            #endregion
        }
        
        #region Properties
        public UICellContentsValueWindow UICellContentsValueWindow
        {
            get
            {
                if ((this.mUICellContentsValueWindow == null))
                {
                    this.mUICellContentsValueWindow = new UICellContentsValueWindow(this);
                }
                return this.mUICellContentsValueWindow;
            }
        }
        #endregion
        
        #region Fields
        private UICellContentsValueWindow mUICellContentsValueWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICellContentsValueWindow : WinWindow
    {
        
        public UICellContentsValueWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cellContentsValue";
            this.WindowTitles.Add("Spreadsheet");
            #endregion
        }
        
        #region Properties
        public WinEdit UICellContentsValueEdit
        {
            get
            {
                if ((this.mUICellContentsValueEdit == null))
                {
                    this.mUICellContentsValueEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICellContentsValueEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Cell Contents:";
                    this.mUICellContentsValueEdit.WindowTitles.Add("Spreadsheet");
                    #endregion
                }
                return this.mUICellContentsValueEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICellContentsValueEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIFolderViewWindow UIFolderViewWindow
        {
            get
            {
                if ((this.mUIFolderViewWindow == null))
                {
                    this.mUIFolderViewWindow = new UIFolderViewWindow(this);
                }
                return this.mUIFolderViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIFolderViewWindow mUIFolderViewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFolderViewWindow : WinWindow
    {
        
        public UIFolderViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            #endregion
        }
        
        #region Properties
        public WinListItem UIRecycleBinListItem
        {
            get
            {
                if ((this.mUIRecycleBinListItem == null))
                {
                    this.mUIRecycleBinListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIRecycleBinListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Recycle Bin";
                    #endregion
                }
                return this.mUIRecycleBinListItem;
            }
        }
        
        public WinListItem UIMozillaFirefoxListItem
        {
            get
            {
                if ((this.mUIMozillaFirefoxListItem == null))
                {
                    this.mUIMozillaFirefoxListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIMozillaFirefoxListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Mozilla Firefox";
                    #endregion
                }
                return this.mUIMozillaFirefoxListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIRecycleBinListItem;
        
        private WinListItem mUIMozillaFirefoxListItem;
        #endregion
    }
}
